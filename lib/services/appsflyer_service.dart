import 'package:appsflyer_sdk/appsflyer_sdk.dart';
import 'package:flutter/foundation.dart';

import 'appsflyer_config.dart';
/// –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å AppsFlyer SDK.
/// –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∞—Ç—Ä–∏–±—É—Ü–∏—é, conversion —Å–æ–±—ã—Ç–∏—è –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –∫–∞–º–ø–∞–Ω–∏—è–º–∏.
class AppsFlyerService {
  static final AppsFlyerService _instance = AppsFlyerService._internal();
  factory AppsFlyerService() => _instance;
  AppsFlyerService._internal();

  AppsflyerSdk? _appsflyerSdk;
  bool _isInitialized = false;
  bool _isStarted = false;

  bool get isInitialized => _isInitialized;
  bool get isStarted => _isStarted;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AppsFlyer SDK
  Future<void> initialize() async {
    if (_isInitialized) {
      return;
    }

    try {
      final config = _resolveConfig();

      if (!config.isComplete) {
        if (kDebugMode) {
          print('‚ö†Ô∏è AppsFlyer –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–ø–æ–ª–Ω–∞—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
        }
        return;
      }

      final AppsFlyerOptions options = AppsFlyerOptions(
        afDevKey: config.devKey,
        appId: config.appId ?? '', // —Ç–æ–ª—å–∫–æ –¥–ª—è iOS, –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è Android
        showDebug: kDebugMode,
        timeToWaitForATTUserAuthorization: 60, // iOS 14.5+ ATT - —É–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 60 —Å–µ–∫
        disableAdvertisingIdentifier: false,
        disableCollectASA: false, // Apple Search Ads
        manualStart: true, // üî• –ö–†–ò–¢–ò–ß–ù–û –¥–ª—è Purchase Connector!
      );

      _appsflyerSdk = AppsflyerSdk(options);

      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º callbacks
      _appsflyerSdk!.onAppOpenAttribution((data) {
        if (kDebugMode) {
          print('üì± AppsFlyer onAppOpenAttribution: $data');
        }
        _handleDeepLink(data);
      });

      _appsflyerSdk!.onInstallConversionData((data) {
        if (kDebugMode) {
          print('üìä AppsFlyer onInstallConversionData: $data');
          print('üìä Install Conversion Data:');
          print('  status: ${data['status']}');
          print('  payload: ${data['payload']}');
          if (data['payload'] != null) {
            final payload = data['payload'] as Map<dynamic, dynamic>;
            print('üìä User Type: ${payload['af_status'] == 'Organic' ? 'Organic' : 'Non-Organic'}');
          }
        }
        _handleInstallConversion(data);
      });

      _appsflyerSdk!.onDeepLinking((data) {
        if (kDebugMode) {
          print('üîó AppsFlyer onDeepLinking: $data');
        }
        _handleDeepLink(data.deepLink?.clickEvent);
      });

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º SDK (–ù–ï –∑–∞–ø—É—Å–∫–∞–µ–º –∏–∑-–∑–∞ manualStart: true)
      await _appsflyerSdk!.initSdk(
        registerConversionDataCallback: true,
        registerOnAppOpenAttributionCallback: true,
        registerOnDeepLinkingCallback: true,
      );

      _isInitialized = true;

      if (kDebugMode) {
        print('‚úÖ AppsFlyer SDK –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–Ω–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–∑-–∑–∞ manualStart: true)');
        print('   Dev Key: ${config.devKey}');
        print('   Bundle ID: ${config.bundleId}');
        if (config.appId != null) {
          print('   App ID: ${config.appId}');
        }
        print('‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ startSDK() –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–≥–ª–∞—Å–∏–π');
      }
    } catch (error, stackTrace) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AppsFlyer: $error');
        print(stackTrace);
      }
    }
  }

  /// –ó–∞–ø—É—Å–∫ AppsFlyer SDK –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–≥–ª–∞—Å–∏–π
  /// –ö–†–ò–¢–ò–ß–ù–û: –¥–æ–ª–∂–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ü–û–°–õ–ï configure consent –∏ –î–û Purchase Connector
  Future<void> startSDK() async {
    if (!_isInitialized || _appsflyerSdk == null) {
      if (kDebugMode) {
        print('‚ùå AppsFlyer –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å SDK');
      }
      return;
    }

    if (_isStarted) {
      if (kDebugMode) {
        print('‚ö†Ô∏è AppsFlyer SDK —É–∂–µ –∑–∞–ø—É—â–µ–Ω');
      }
      return;
    }

    try {
      _appsflyerSdk!.startSDK();
      _isStarted = true;

      if (kDebugMode) {
        print('üöÄ AppsFlyer SDK –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        print('‚úÖ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Purchase Connector');
      }
    } catch (error, stackTrace) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ AppsFlyer SDK: $error');
        print(stackTrace);
      }
    }
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –≤ AppsFlyer
  Future<void> logEvent({
    required String eventName,
    Map<String, dynamic>? eventValues,
  }) async {
    if (!_isInitialized || _appsflyerSdk == null) {
      if (kDebugMode) {
        print('‚ö†Ô∏è AppsFlyer –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ: $eventName');
      }
      return;
    }

    try {
      await _appsflyerSdk!.logEvent(eventName, eventValues ?? {});

      if (kDebugMode) {
        print('üìä AppsFlyer Event: $eventName');
        if (eventValues != null && eventValues.isNotEmpty) {
          print('   Parameters: $eventValues');
        }
      }
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ AppsFlyer —Å–æ–±—ã—Ç–∏—è $eventName: $error');
      }
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ AppsFlyer UID
  Future<String?> getAppsFlyerUID() async {
    if (!_isInitialized || _appsflyerSdk == null) {
      return null;
    }

    try {
      return await _appsflyerSdk!.getAppsFlyerUID();
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è AppsFlyer UID: $error');
      }
      return null;
    }
  }

  /// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<void> setCustomerUserId(String customerId) async {
    if (!_isInitialized || _appsflyerSdk == null) {
      return;
    }

    try {
      _appsflyerSdk!.setCustomerUserId(customerId);

      if (kDebugMode) {
        print('üë§ AppsFlyer Customer ID —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $customerId');
      }
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Customer ID: $error');
      }
    }
  }

  // ==================== CONVERSION EVENTS ====================


  /// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ AppsFlyer (Android) - LEGACY —Ä–µ–∂–∏–º
  /// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ Purchase Connector –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è Flutter
  Future<void> validateAndLogAndroidPurchase({
    required String productId,
    required String purchaseToken,
    required double price,
    required String currency,
    Map<String, dynamic>? additionalData,
  }) async {
    if (!_isInitialized || _appsflyerSdk == null) {
      if (kDebugMode) {
        print('‚ö†Ô∏è AppsFlyer –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–æ–∫—É–ø–∫–∏');
      }
      return;
    }

    try {
      if (kDebugMode) {
        print('üî• AppsFlyer LEGACY –≤–∞–ª–∏–¥–∞—Ü–∏—è Android –ø–æ–¥–ø–∏—Å–∫–∏:');
        print('   Product: $productId');
        print('   Token: ***${purchaseToken.length > 4 ? purchaseToken.substring(purchaseToken.length - 4) : purchaseToken}');
        print('   Price: $price $currency');
        print('   Event: ${productId.contains('trial') ? 'af_start_trial' : 'af_subscribe'}');
      }

      // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π AppsFlyer event
      final eventData = {
        'af_revenue': price,
        'af_currency': currency,
        'af_quantity': 1,
        'af_content_id': productId,  // –î–ª—è –ø–æ–¥–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è af_content_id
        'af_purchase_token': purchaseToken,
        'af_validation_method': 'legacy_android',
        ...?additionalData,
      };

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–¥—É–∫—Ç–∞
      String eventName = 'af_subscribe'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫

      // –ï—Å–ª–∏ —ç—Ç–æ —Ç—Ä–∏–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
      if (productId.contains('trial') || (additionalData?['subscription_type'] == 'trial')) {
        eventName = 'af_start_trial';
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
      await logEvent(
        eventName: eventName,
        eventValues: eventData,
      );

      if (kDebugMode) {
        print('‚úÖ AppsFlyer Legacy Android –≤–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: $eventName');
      }

    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ AppsFlyer Legacy Android –≤–∞–ª–∏–¥–∞—Ü–∏–∏: $error');
      }
    }
  }

  /// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ AppsFlyer (iOS)
  /// DEPRECATED: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Purchase Connector –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  Future<void> validateAndLogIOSPurchase({
    required String productId,
    required String transactionId,
    required double price,
    required String currency,
    Map<String, dynamic>? additionalData,
  }) async {
    if (kDebugMode) {
      print('‚ö†Ô∏è validateAndLogIOSPurchase deprecated - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Purchase Connector');
      print('   Product: $productId, Price: $price $currency');
    }

    // Purchase Connector –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é
    // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
  }

  /// –ó–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
  Future<void> logCompleteRegistration({
    String? method,
  }) async {
    await logEvent(
      eventName: 'af_complete_registration',
      eventValues: {
        if (method != null) 'af_registration_method': method,
      },
    );
  }

  /// –ó–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ/onboarding
  Future<void> logCompleteTutorial() async {
    await logEvent(eventName: 'af_tutorial_completion');
  }

  /// –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏)
  Future<void> logLevelAchieved({
    required int level,
    String? description,
  }) async {
    await logEvent(
      eventName: 'af_level_achieved',
      eventValues: {
        'af_level': level,
        if (description != null) 'af_description': description,
      },
    );
  }

  /// –ü–æ–∏—Å–∫ (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö/FAQ)
  Future<void> logSearch({
    required String searchString,
    String? category,
  }) async {
    await logEvent(
      eventName: 'af_search',
      eventValues: {
        'af_search_string': searchString,
        if (category != null) 'af_content_type': category,
      },
    );
  }

  /// –°–æ–±—ã—Ç–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏)
  Future<void> logSubscriptionStart({
    required String productId,
    required String billingPeriod,
    required String source,
  }) async {
    await logEvent(
      eventName: 'af_start_trial', // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ AppsFlyer —Å–æ–±—ã—Ç–∏–µ
      eventValues: {
        'af_product_id': productId,
        'af_billing_period': billingPeriod,
        'af_source': source,
        'timestamp': DateTime.now().toIso8601String(),
      },
    );
  }

  /// –°–æ–±—ã—Ç–∏–µ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏ (–≤–∞–∂–Ω–æ –¥–ª—è retention –∞–Ω–∞–ª–∏–∑–∞)
  Future<void> logSubscriptionCancel({
    required String productId,
    required String reason,
  }) async {
    await logEvent(
      eventName: 'af_cancel_subscription', // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ AppsFlyer —Å–æ–±—ã—Ç–∏–µ
      eventValues: {
        'af_product_id': productId,
        'af_cancellation_reason': reason,
        'timestamp': DateTime.now().toIso8601String(),
      },
    );
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Ö–æ–¥–æ–≤ –æ—Ç —Ä–µ–∫–ª–∞–º—ã (Ad Revenue)
  /// –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å AppLovin MAX –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–æ—Ö–æ–¥–æ–≤ –æ—Ç –ø–æ–∫–∞–∑–æ–≤ —Ä–µ–∫–ª–∞–º—ã
  Future<void> logAdRevenue({
    required String mediationNetwork, // 'AppLovin MAX'
    required String currencyCode, // 'USD'
    required double revenue,
    required Map<String, dynamic> additionalParams,
  }) async {
    if (!_isInitialized || _appsflyerSdk == null) {
      if (kDebugMode) {
        print('‚ö†Ô∏è AppsFlyer –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, Ad Revenue —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ');
      }
      return;
    }

    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º AppsFlyer Ad Revenue API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
      final adRevenueData = {
        'af_mediation_network': mediationNetwork,
        'af_currency': currencyCode,
        'af_revenue': revenue,
        ...additionalParams,
      };

      await logEvent(
        eventName: 'af_ad_revenue',
        eventValues: adRevenueData,
      );

      if (kDebugMode) {
        print('üí∞ AppsFlyer Ad Revenue logged:');
        print('   Network: $mediationNetwork');
        print('   Revenue: $revenue $currencyCode');
        print('   Additional params: $additionalParams');
      }
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Ad Revenue: $error');
      }
    }
  }

  // ==================== –í–ù–£–¢–†–ï–ù–ù–ò–ï –ú–ï–¢–û–î–´ ====================

  AppsFlyerConfig _resolveConfig() {
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return appsFlyerAndroidConfig;
      case TargetPlatform.iOS:
        return appsFlyerIosConfig;
      default:
        return const AppsFlyerConfig.empty();
    }
  }

  void _handleInstallConversion(Map<dynamic, dynamic> data) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if (kDebugMode) {
      print('üìä Install Conversion Data:');
      print('  status: ${data['status']}');
      print('  payload: ${data['payload']}');
    }

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–≥–æ vs. –Ω–µ–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞
    // –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞

    final isOrganic = data['is_first_launch'] == true &&
                      (data['af_status'] == 'Organic' || data['media_source'] == null);

    if (kDebugMode) {
      print('üìä User Type: ${isOrganic ? 'Organic' : 'Non-Organic'}');
    }
  }

  void _handleDeepLink(Map<dynamic, dynamic>? data) {
    if (data == null) return;

    if (kDebugMode) {
      print('üîó Deep Link Data:');
      data.forEach((key, value) {
        print('  $key: $value');
      });
    }

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ deep links
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–∫—Ä—ã—Ç–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤ –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏–π
  }
}